- name: Add NFS share mount Point  
  hosts: veeam-server
  vars: 
    nfs_share_mount_point: "10.21.122.33:/test-export" 
    backup_repository: "10.21.210.156"
  tasks:
    - name: Debug the backup job creation
      ansible.builtin.debug:
        msg: "Create and run the NFS share mount point {{ nfs_share_mount_point }} backup job."

    - name: Execute PowerShell script for Veeam Backup with Debugging
      win_shell: |
        # Import the Veeam PowerShell module
        Add-PSSnapin VeeamPSSnapIn -ErrorAction SilentlyContinue

        # Parse server and path from nfs_share_mount_point
        $nfs_share_mount_point = "{{ nfs_share_mount_point }}"
        $parts = $nfs_share_mount_point -split ":", 2
        $serverName = $parts[0]
        $sharePath = $parts[1]

        # Validate the path
        Write-Host "Checking files in path: $sharePath"
        $files = Get-ChildItem -Path $sharePath -Recurse
        if (!$files) {
            Write-Host "No files found in path: $sharePath. Exiting."
            exit 1
        }
        Write-Host "Files found: $($files | Measure-Object).Count"

        # Get the NFS server
        $server = Get-VBRUnstructuredServer -Name $serverName
        if (-not $server) {
            Write-Host "Failed to find server: $serverName"
            exit 1
        }

        # Add the NFS share to the job object
        $object = New-VBRNASBackupJobObject -Server $server -Path $sharePath
        if (-not $object) {
            Write-Host "Failed to create NAS backup job object for path: $sharePath"
            exit 1
        }

        # Get the backup repository
        $repository = Get-VBRBackupRepository -Name "{{ backup_repository }}"
        if (-not $repository) {
            Write-Host "Failed to find repository: {{ backup_repository }}"
            exit 1
        }

        # Create and start the backup job
        $jobName = "Backup $nfs_share_mount_point Job"
        $job = Add-VBRNASBackupJob -BackupObject $object -ShortTermBackupRepository $repository -Name $jobName
        if ($job) {
            Write-Host "Starting backup job: $jobName"
            Start-VBRJob -Job $job
        } else {
            Write-Host "Failed to create the backup job: $jobName"
        }

      args:
        executable: powershell
