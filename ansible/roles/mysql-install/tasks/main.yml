- name: format the additional disk
  filesystem:
    fstype: ext4
    dev: /dev/sdc

- name: create mount directory
  file:
    path: '/var/lib/'
    state: directory
    mode: '0755'
  with_items:
    - mysql

- name: Mount migration volume
  mount:
    path: "/var/lib/mysql"
    fstype: ext4
    src: /dev/sdc
    state: mounted

- name: Disable Selinux
  selinux:
   state: disabled


- name: stop and disable firewalld
  systemd:
    name: firewalld
    state: stopped
    enabled: no

- name: install mysql
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - mysql-server
    - mysql
    - python3-mysql
    - mysql-devel


- name: start mysql service
  systemd:
    name: mysqld
    state: started

- name: install git
  dnf:
    name: 'git'
    state: latest

- name: Install pexpect & mysqlclient
  pip:
    name: "{{ item }}"
  with_items:
    - pexpect
    - mysqlclient

# - name: mysql secure
#   become: yes
#   #vars:
#   #  ansible_python_interpreter: /usr/bin/python3.9
#   expect:
#     command: mysql_secure_installation
#     responses:
#       #'Enter password for user root': "{{ mysqlpass }}"
#       'Would you like to setup VALIDATE PASSWORD component': 'n'
#       'Change the password for root': 'y'
#       'Enter current password for root': ''
#       'Set root password': 'y'
#       'New password': "{{ sqlpass }}"
#       'Re-enter new password': "{{ sqlpass }}"
#       'Remove anonymous users': 'y'
#       'Disallow root login remotely': 'n'
#       'Remove test database': 'y'
#       'Reload privilege tables now': 'y'
#     timeout: 1
#   register: sec_mysql

- name: Create a new database
  community.mysql.mysql_db:
    name: testing
    state: present
    login_password: "{{ sqlpass }}"
    #login_unix_socket: /run/mysqld/mysqld.sock

- name: Create user with password and grant priv
  community.mysql.mysql_user:
    state: present
    name: dbtest
    password: "{{ sqlpass }}"
    login_password: "{{ sqlpass }}"
    priv:
      'testing.*': 'ALL,GRANT'

- name: Download rpm
  shell: curl -s https://packagecloud.io/install/repositories/akopytov/sysbench/script.rpm.sh | sudo bash ; yum -y install sysbench

- name: clone repo
  git:
    repo: https://github.com/Percona-Lab/sysbench-tpcc.git
    dest: /usr/share/sysbench/percona

- name: copy files
  shell: cp /usr/share/sysbench/percona/* /usr/share/sysbench/.

- name: cleanup
  shell: sysbench /usr/share/sysbench/tpcc.lua --threads=1 --tables=1 --scale=1 --db-driver=mysql --mysql-db=testing --mysql-user=dbtest --mysql-password={{ sqlpass }} cleanup

- name: prepare
  shell: sysbench /usr/share/sysbench/tpcc.lua --threads=1 --tables=1 --scale=1 --db-driver=mysql --mysql-db=testing --mysql-user=dbtest --mysql-password={{ sqlpass }} prepare
  async: 1000
  poll: 5

- name: run
  shell: sysbench /usr/share/sysbench/tpcc.lua --threads=1 --tables=1 --scale=1 --db-driver=mysql --mysql-db=testing --mysql-user=dbtest --mysql-password={{ sqlpass }} run > /tmp/mysql_test-$(date +"%Y_%m_%d_%I_%M_%p").log
  async: 1000
  poll: 5

- name: get the test results
  shell: cat `ls -lrt /tmp/mysql_test*|tail -1|awk '{print $9}'`
  register: mysql_test_result

- name: print the results
  debug:
    var: mysql_test_result

# - name: cleanup
#   shell: sysbench /usr/share/sysbench/tpcc.lua --threads=48 --tables=2 --scale=20 --db-driver=mysql --mysql-db=testing --mysql-user=dbtest --mysql-password={{ sqlpass }} cleanup
